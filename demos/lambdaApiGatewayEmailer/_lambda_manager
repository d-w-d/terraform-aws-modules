#!/bin/bash
#
# Lets you build/analyse lambda function

# Preliminaries
source .env
clear

#######################################
# Crude helper printout
# Globals:
#   None
# Arguments:
#   None
#######################################
function _usage() {
  clear
  echo -e """
    Usage:
    _lamba_manager help      -   Show usage
    _lamba_manager build     -   Build bundle
    _lamba_manager analyze   -   Run webpack bundle analyzer
  """
}

#######################################
# Run webpack to build bundle
# Globals:
#   None
# Arguments:
#   None
#######################################
function _build_lambda() {
  # Refresh dist-dir
  rm -rf dist-lambda
  mkdir dist-lambda
  # Build bundle with webpack
  TS_NODE_PROJECT='src/config/tsconfig.webpack.json' \
    ./node_modules/.bin/webpack \
    --mode production \
    --progress \
    --color \
    --config src/config/webpack.config.ts \
    --json >dist-lambda/compilation-stats.json

  # Add handler to wrap lambda code
  cat <<-EOF >>dist-lambda/exports.js
    const lambda = require('./lambda');
    exports.handler = function(event, context, callback) {
      lambda.handler(event, context, callback);
    };
EOF

  # Zip output
  cd dist-lambda
  zip exports.js.zip exports.js lambda.js
  cd ..

}

#######################################
# Run webpack bundle analyzer
# Globals:
#   None
# Arguments:
#   None
#######################################
function _analyze_lambda() {
  ./node_modules/.bin/webpack-bundle-analyzer ./dist-lambda/compilation-stats.json
}

main() {

  case "$1" in
  "--help" | "help")
    _usage
    ;;
  "build")
    _build_lambda
    ;;
  "analyze")
    _analyze_lambda
    ;;
  *)
    echo >&2 "Invalid option: $@"
    _usage
    return 1
    ;;
  esac

}

main $@
